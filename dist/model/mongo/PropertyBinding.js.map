{"version":3,"sources":["../../../../src/ui5/model/mongo/PropertyBinding.js"],"names":[],"mappings":";;AAAA;;;;AAIA;AACA,IAAI,EAAJ,CAAO,MAAP,CAAc,CACb,mBADa,EAEb,8BAFa,EAGb,yBAHa,EAIb,wBAJa,CAAd,EAKG,UAAS,MAAT,EAAiB,eAAjB,EAAkC,UAAlC,EAA8C,SAA9C,EAAyD;AACxD;;AAEA;;;;;;;;;;;;;;;;AAgBA,MAAI,mBAAmB,gBAAgB,MAAhB,CAAuB,wCAAvB,EAAiE,8DAA+D;;AAErJ,iBAAa,qBAAS,MAAT,EAAiB,KAAjB,EAAwB,QAAxB,EAAkC,WAAlC,EAA+C;AAC9D;AACI,sBAAgB,KAAhB,CAAsB,IAAtB,EAA4B,SAA5B;AACD;;AALoJ,GAAhI,CAAvB;;AASA;AACA;;;;;;;;;AASA,mBAAiB,SAAjB,CAA2B,QAA3B,GAAsC,YAAW;AAClD,WAAO,KAAK,MAAL,CAAY,WAAZ,CAAwB,KAAK,KAA7B,EAAoC,KAAK,QAAzC,CAAP;AACE,GAFD;;AAIA;;;;;;;;;;AAUD;AACA;;AAEC;;;;;;;;;;;;;;;;;AAiBA,mBAAiB,SAAjB,CAA2B,gBAA3B,GAA8C,UAAS,MAAT,EAAiB;;AAE7D;AACA,QAAI,KAAK,WAAT,EAAsB;AACpB,aAAO,GAAP,CAAW,GAAX,CAAe,OAAf,CAAuB,+DAAvB;AACA;AACD;;AAED,QAAI,aAAa,KAAK,YAAL,EAAjB;AACA,QAAI;AACF,UAAI,KAAK,KAAT,EAAgB;AACd,iBAAS,KAAK,KAAL,CAAW,UAAX,CAAsB,MAAtB,EAA8B,KAAK,aAAnC,CAAT;AACA,aAAK,KAAL,CAAW,aAAX,CAAyB,MAAzB;AACD;AACF,KALD,CAKE,OAAO,UAAP,EAAmB;AACnB,iBAAW,eAAX,CAA2B,MAA3B;AACA,WAAK,cAAL,GAFmB,CAEI;AACvB,YAAM,UAAN;AACD;AACD;AACA,eAAW,eAAX,CAA2B,IAA3B;AACA,SAAK,QAAL,CAAc,MAAd;AACD,GAtBD;;AAwBA,SAAO,gBAAP;AAED,CAvGH","file":"PropertyBinding.js","sourcesContent":["/*!\n * ${copyright}\n */\n\n// Provides an abstract property binding.\nsap.ui.define([\n\t'jquery.sap.global',\n\t'sap/ui/model/PropertyBinding',\n\t'sap/ui/model/SimpleType',\n\t'sap/ui/model/DataState'\n], function(jQuery, PropertyBinding, SimpleType, DataState) {\n    \"use strict\";\n\n    /**\n     * Constructor for PropertyBinding\n     *\n     * @class\n     * The PropertyBinding is used to access single data values in the data model.\n     *\n     * @param {sap.ui.model.Model} oModel\n     * @param {string} sPath\n     * @param {sap.ui.model.Context} oContext\n     * @param {object} [mParameters]\n     *\n     * @public\n     * @alias meteor-ui5.model.mongo.PropertyBinding\n     * @extends sap.ui.model.Binding\n     */\n\n    var cPropertyBinding = PropertyBinding.extend(\"meteor-ui5.model.mongo.PropertyBinding\", /** @lends meteor-ui5.model.mongo.PropertyBinding.prototype */ {\n\n      constructor: function(oModel, sPath, oContext, mParameters) {\n\t\t\t\t// Call super constructor\n        PropertyBinding.apply(this, arguments);\n      },\n\n    });\n\n    // the 'abstract methods' to be implemented by child classes\n    /**\n     * Returns the current value of the bound target\n     *\n     * @function\n     * @name meteor-ui5.model.mongo.PropertyBinding.prototype.getValue\n     * @return {object} the current value of the bound target\n     *\n     * @public\n     */\n    cPropertyBinding.prototype.getValue = function() {\n\t\t\treturn this.oModel.getProperty(this.sPath, this.oContext);\n    }\n\n    /**\n     * Sets the value for this binding. A model implementation should check if the current default binding mode permits\n     * setting the binding value and if so set the new value also in the model.\n     *\n     * @function\n     * @name meteor-ui5.model.mongo.PropertyBinding.prototype.setValue\n     * @param {object} oValue the value to set for this binding\n     *\n     * @public\n     */\n\t\t // TODO: Do we need to implement this eventually?  See TODO in\n\t\t // setExternalValue.\n\n    /**\n     * Sets the value for this binding. The value is parsed and validated against its type and then set to the binding.\n     * A model implementation should check if the current default binding mode permits\n     * setting the binding value and if so set the new value also in the model.\n\t\t *\n\t\t * TODO: Do something with this - this was copied from base PropertyBinding\n\t\t * class but we don't support two-way binding.  When we do, we will have to\n\t\t * override this code.  In the mean time we need to change it to throw an\n\t\t * exception.\n     *\n     * @param {object} oValue the value to set for this binding\n     *\n     * @throws sap.ui.model.ParseException\n     * @throws sap.ui.model.ValidateException\n     *\n     * @public\n     */\n    cPropertyBinding.prototype.setExternalValue = function(oValue) {\n\n      // formatter doesn't support two way binding\n      if (this.fnFormatter) {\n        jQuery.sap.log.warning(\"Tried to use twoway binding, but a formatter function is used\");\n        return;\n      }\n\n      var oDataState = this.getDataState();\n      try {\n        if (this.oType) {\n          oValue = this.oType.parseValue(oValue, this.sInternalType);\n          this.oType.validateValue(oValue);\n        }\n      } catch (oException) {\n        oDataState.setInvalidValue(oValue);\n        this.checkDataState(); //data ui state is dirty inform the control\n        throw oException;\n      }\n      // if no type specified set value directly\n      oDataState.setInvalidValue(null);\n      this.setValue(oValue);\n    };\n\n    return cPropertyBinding;\n\n  });\n"]}